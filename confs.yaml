---

# This playbook assumes Arch EndeavourOS 
# To init a new machine, run with "-t init"
# To update all confs, run with "-t up"
# To update packages, run with "-t pacman"
# To update bashrc confs, run with "-t bashrc"
# To update tmux confs, run with "-t tmux"
# To update SpaceVim conf, run with "-t spacevim"
# To update GRUB conf, run with "-t grub"

  - name: "Set up an machine for work"
    hosts: localhost
    vars:
     # Change this to appropriate user
     user: katurv
    connection: local 
    tasks:

    - name: "pacman packages install"
      become: true
      pacman:
        update_cache: yes
        name:
          - vim
          - neovim
          - mlocate
          - multitail
          - tree
          - ufw
          - wget
          - curl 
          - vlc
          - qbittorrent
          - python
          - make
          - valgrind
          - gdb
          - openssh
          - keychain
          - git
          - ansible 
          - telegram-desktop
          - signal-desktop
          - discord
          - thunderbird
          - firefox
          - bluez
          - bluez-utils
          - pulseaudio-bluetooth
          - libffi
          - qmk
          - tmux
          - ipmitool
          - arduino
          - arduino-cli
          - arduino-avr-core 
          - ccid
          - acsccid
          - steam
        state: present
      tags: 
        - init
        - pacman
        - up
        
    - name: "sudo pacman -Syu"
      become: true
      pacman:
        update_cache: yes
        upgrade: yes
      tags: 
        - init
        - pacman
        - up
    
    - name: Install AUR packages using yay
      kewlfft.aur.aur:
        name:
          - spotify
          - qdigidoc4
          - chrome-token-signing
          - esteidpkcs11loader
          - xml-security-c
          - fritzing
        use: yay
        state: present
        aur_only: yes
        

    - name: Upgrade the system using yay, only act on AUR packages.
      kewlfft.aur.aur:
        upgrade: yes
        use: yay
        aur_only: yes
       
    - name: Create the `aur_builder` user
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel
      tags: 
       - init
        
    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'
      tags: 
       - init

    - name: "Set up yay for AUR"
      shell: |
        git -C ~/ clone https://aur.archlinux.org/yay-git.git
        "chown -R {{ user }}:{{ user }} ~/yay-git"
        cd ~/yay-git
        makepkg -si --noconfirm
      ignore_errors: True
      tags: 
       - init

    - name: "Copy .tmux.conf"
      copy:       
        dest: ~/
        src: configs/.tmux.conf
      tags:
        - tmux  
        - init
        - up

    - name: "Copy .bashrc"
      copy:       
        dest: ~/
        src: configs/.bashrc
      tags:
        - bashrc
        - init
        - up

    - name: "Copy .bash_profile"
      copy:       
        dest: ~/
        src: configs/.bash_profile
      tags:
        - bashrc
        - init
        - up

    - name: "Install SpaceVim"
      shell: curl -sLf https://spacevim.org/install.sh | bash
      tags:
        - init

    - name: "Copy SpaceVim toml config"
      copy: 
        dest: ~/.SpaceVim.d/
        src: configs/.SpaceVim.d/init.toml
      tags:
        - spacevim
        - init
        - up
        
    - name: "Enable GRUB os-prober"
      become: true
      shell: |
        echo "GRUB_DISABLE_OS_PROBER=false" >> /etc/default/grub
        sudo grub-mkconfig -o /boot/grub/grub.cfg
      tags:
        - init
        - grub
        
    - name: "Enable Bluetooth"
      become: true
      shell: |
        modprobe btusb
        sudo systemctl enable bluetooth
        sudo systemctl start bluetooth
      tags:
        - init
        - bt
        
    - name: "Set up arduino"
      become: true
      shell: |
        modprobe cdc_acm
        "usermod -aG uucp {{ user }}"
      tags:
        - init
        - arduino
        
    - name: "Set up digidoc"
      become: true
      shell: |
        systemctl enable pcscd.socket
        systemctl start pcscd.socket
      tags:
        - init
        - digidoc
